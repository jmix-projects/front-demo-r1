plugins {
    id 'io.jmix' version '1.0.0'
    id 'java'
}

apply plugin: 'org.springframework.boot'

jmix {
    bomVersion = '1.0.0'
}

group = 'com.company'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '8'

repositories {
    mavenCentral()
    maven {
        url 'https://nexus.jmix.io/repository/public'
    }
}

dependencies {
    implementation 'io.jmix.core:jmix-core-starter'
    implementation 'io.jmix.data:jmix-eclipselink-starter'
    implementation 'io.jmix.ui:jmix-ui-starter'
    implementation 'io.jmix.ui:jmix-ui-data-starter'
    implementation 'io.jmix.ui:jmix-ui-themes-compiled'
    implementation 'io.jmix.ui:jmix-ui-widgets-compiled'
    implementation 'io.jmix.security:jmix-security-starter'
    implementation 'io.jmix.security:jmix-security-ui-starter'
    implementation 'io.jmix.security:jmix-security-data-starter'
    implementation 'io.jmix.localfs:jmix-localfs-starter'

    implementation 'org.springframework.boot:spring-boot-starter-web'


    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    runtimeOnly 'org.postgresql:postgresql'
    implementation "io.jmix.security:jmix-security-oauth2-starter"
    implementation "io.jmix.graphql:jmix-graphql-starter"
    implementation "io.jmix.rest:jmix-rest-starter"
    runtimeOnly ("com.graphql-java-kickstart:graphiql-spring-boot-starter:8.1.1") {
        exclude group: 'javax.websocket', module: 'javax.websocket-api'
    }
    runtimeOnly "com.graphql-java-kickstart:graphiql-spring-boot-starter:8.1.1"
}

test {
    useJUnitPlatform()
}

bootBuildImage {
    if (rootProject.hasProperty('jmixDockerTag')) {
        imageName = rootProject['jmixDockerTag']
    } else {
        imageName = 'docker.haulmont.com/platform/infrastructure/demo-cuba-apps-docker/demo-r1/frontend-demo-r1-jmix:testing'
    }
}

